local ChamsLibrary = {}
local ChamsType = loadstring(game:HttpGet("https://raw.githubusercontent.com/DarkLord6789/luauScripts/refs/heads/main/ChamsThemes"))()

function ChamsLibrary:SetConfigColor(newHighlightColor, theme)
	theme.highlightColor = newHighlightColor
end

function ChamsLibrary:SetConfigColorOutline(newOutlineColor, theme)
	theme.highlightOutColor = newOutlineColor
end

function ChamsLibrary:SetConfigTransparency(newTransparency, theme)
	theme.highlightTransparency = newTransparency
end

function ChamsLibrary:SetConfigTransparencyOutline(newTransparencyOutline, theme)
	theme.highlightOutlineTransparency = newOutlineTransparency
end

function ChamsLibrary:SetTransparencyChams(Dir, value)
	if Dir:FindFirstChild("EraChams") then
		Dir.EraChams.FillTransparency = value
	end
end

function ChamsLibrary:SetBorderTransparency(Dir, value)
	if Dir:FindFirstChild("EraChams") then
		Dir.EraChams.OutlineTransparency = value
	end
end

function ChamsLibrary:SetColorChams(Dir, value)
	if Dir:FindFirstChild("EraChams") then
		Dir.EraChams.FillColor = value
	end
end

function ChamsLibrary:SetBorderColor(Dir, value)
	if Dir:FindFirstChild("EraChams") then
		Dir.EraChams.OutlineColor = value
	end
end

function ChamsLibrary:SetVisMode(Dir, value) -- "AlwaysOnTop", ""
	if Dir:FindFirstChild("EraChams") then
		Dir.EraChams.DepthMode = value
	end
end

function ChamsLibrary:Exist(Dir) -- "AlwaysOnTop", ""
	if Dir:FindFirstChild("EraChams") then
		return true
    else
        return false
	end
end

function ChamsLibrary:UpdateHumanoid(PDir, theme)
	for i, v in pairs(PDir:GetChildren()) do
		print(theme.customHum)
		if theme.customHum then
			if v:IsA("MeshPart") then
				v.Color = theme.humPartsColor
				v.TextureID = theme.humTextureId 
				v.Material = theme.humMaterial
			end
			if v:IsA("Part") then
				v.Color = theme.humPartsColor
				v.Material = theme.humMaterial
				if v:FindFirstChild("face") then
					v.face.Texture = theme.humTextureId
				elseif v:FindFirstChild("SurfaceAppearance") then
					v.SurfaceAppearance.ColorMap = theme.humTextureId
				end
			end
		end
		if not theme.customHum then
			if v:IsA("MeshPart") then
				v.Color = Color3.fromRGB(255,255,255)
				v.TextureID = ""
				v.Material = "Plastic"
			end
			if v.Name == "Head" then	
				v.Color = Color3.fromRGB(255,255,255)
				v.Material = "Plastic"
				if v:FindFirstChild("face") then
					v.face.Texture = ""
				elseif v:FindFirstChild("SurfaceAppearance") then
					v.SurfaceAppearance.ColorMap = ""
				end
			end
		end
	end
end

function ChamsLibrary:GetThemes()
	return ChamsType;
end

function ChamsLibrary:DeleteChams(player)
	for i, v in pairs(player:GetChildren()) do
		if v:IsA("MeshPart") then
			v.Color = Color3.fromRGB(255,255,255)
			v.TextureID = ""
			v.Material = "Plastic"
		end
		if v.Name == "Head" then	
			v.Color = Color3.fromRGB(255,255,255)
			v.Material = "Plastic"
            if v:FindFirstChild("face") then
                v.face.Texture = ""
            elseif v:FindFirstChild("SurfaceAppearance") then
                v.SurfaceAppearance.ColorMap = ""
            end
		end
	end
	if player:FindFirstChild("EraChams") then
		player:FindFirstChild("EraChams"):Destroy()
	end
end

function ChamsLibrary:CreateChams(player, chamsType, visMode)
	ChamsLibrary:DeleteChams(player)
	
	local highlight = Instance.new("Highlight")
	highlight.Name = "EraChams"
	highlight.Parent = player
	highlight.Adornee = player
	highlight.FillColor = chamsType.highlightColor
	highlight.FillTransparency = chamsType.highlightTransparency
	highlight.OutlineTransparency = chamsType.highlightOutlineTransparency
	highlight.OutlineColor = chamsType.highlightOutColor
	highlight.DepthMode = visMode
	highlight.Enabled = true

	if chamsType.customHum then
		for i, v in pairs(player:GetChildren()) do
			if v:IsA("MeshPart") then
				v.Color = chamsType.humPartsColor
				v.TextureID = chamsType.humTextureId 
				v.Material = chamsType.humMaterial
			end

			if v:IsA("Part") then
				if v.Name == "Head" then	
                    if v:FindFirstChild("face") then
                        v.face.Texture = chamsType.humTextureId
                    elseif v:FindFirstChild("SurfaceAppearance") then
                        v.SurfaceAppearance.ColorMap = chamsType.humTextureId
                    end
				end
				v.Color = chamsType.humPartsColor
				v.Material = chamsType.humMaterial
			end

		end
	end
end

return ChamsLibrary
